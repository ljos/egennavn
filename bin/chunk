#!/usr/bin/env bash
#
# Copyright (C) 2016  Bjarte Johansen
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

set -o errexit    # Exit on error
set -o nounset    # Exit on unset variable
set -o pipefail   # Exit on failing pipe

NAME=$(basename "$0")
function usage() {
    cat <<-EOF
	${NAME}	uses a trained SVM model to find named entities in
	Norwegian (bokmÃ¥l) text.

	Usage:
  	  ${NAME} FILE
  	  ${NAME} -h | --help

	Options:
	  -h --help     Show this screen.
	EOF
}

while [[ "$#" -gt 0 ]]; do
    case "${1}" in
	-h|--help)
	    usage
	    exit 0
	    ;;
	* )
	    FILE="$1"
    esac
    shift
done

# Get the source directory of the script.
CURDIR=$(realpath "${0}")
CURDIR=$(dirname "${CURDIR}")

FIFODIR=$(mktemp -d)

function cleanup {
    # Remove the temporary file on exit.
    rm -rf "${FIFODIR}"
}

# Set a trap to cleanup when exiting.
trap cleanup EXIT INT TERM HUP

OBT_OUTPUT="${FIFODIR}/obt_output"
VECTOR="${FIFODIR}/vector"
PREDICTS="${FIFODIR}/predicts"


mkfifo "${OBT_OUTPUT}" "${VECTOR}" "${PREDICTS}"

"${CURDIR}/obt" "${FILE:-/dev/stdin}"					\
    | tee "${OBT_OUTPUT}"						\
    | "${CURDIR}/vectorize" > "${VECTOR}"  &

# Join the predicted tags from svm-predict that will be in $PREDICTS
# with the copy of the vector in $VECTOR. This command is the output
# of the script.
grep "^<w" "${OBT_OUTPUT}"						\
    | sed 's\</*word>\\g'						\
    | paste - <(cat "${PREDICTS}" | tr "123" "BIO" ) &

# svm-predict takes an input- , model- and output file. The output of
# svm-predict are stats about the prediction; which is not interesting
# in this case.
MODEL="${CURDIR}/../res/2015-11-19.svm.model"
if [[ ! -f "${MODEL}" ]]; then
    echo "Missing SVM model file: ${MODEL}" >&2
    exit 127
fi
svm-predict "${VECTOR}" "${MODEL}" "${PREDICTS}" 1>/dev/null

wait
